{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafePipe {\n  /**\n   * Pipe Constructor\n   *\n   * @param _sanitizer: DomSanitezer\n   */\n  // tslint:disable-next-line\n  constructor(_sanitizer) {\n    this._sanitizer = _sanitizer;\n  }\n  /**\n   * Transform\n   * @param value: string\n   * @param type: string\n   */\n  transform(value) {\n    return this._sanitizer.bypassSecurityTrustHtml(value);\n  }\n  static #_ = this.ɵfac = function SafePipe_Factory(t) {\n    return new (t || SafePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"safe\",\n    type: SafePipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["SafePipe","constructor","_sanitizer","transform","value","bypassSecurityTrustHtml","_","i0","ɵɵdirectiveInject","i1","DomSanitizer","_2","pure"],"sources":["/home/jason21715/Desktop/personal-site/src/app/sanitize-html.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n\n@Pipe({\n  name: \"safe\",\n})\nexport class SafePipe implements PipeTransform {\n  /**\n   * Pipe Constructor\n   *\n   * @param _sanitizer: DomSanitezer\n   */\n  // tslint:disable-next-line\n  constructor(protected _sanitizer: DomSanitizer) {}\n\n  /**\n   * Transform\n   * @param value: string\n   * @param type: string\n   */\n  transform(value: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,QAAQ;EACnB;;;;;EAKA;EACAC,YAAsBC,UAAwB;IAAxB,KAAAA,UAAU,GAAVA,UAAU;EAAiB;EAEjD;;;;;EAKAC,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACF,UAAU,CAACG,uBAAuB,CAACD,KAAK,CAAC;EACvD;EAAC,QAAAE,CAAA,G;qBAhBUN,QAAQ,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;;UAARX,QAAQ;IAAAY,IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}